<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview-rsses on Waziup github platform test</title>
    <link>http://fizarbd.github.io/web/overview/index.xml</link>
    <description>Recent content in Overview-rsses on Waziup github platform test</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 01 Jul 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://fizarbd.github.io/web/overview/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Introduction to Hugo</title>
      <link>http://fizarbd.github.io/web/overview/introduction/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://fizarbd.github.io/web/overview/introduction/</guid>
      <description>

&lt;h2 id=&#34;what-is-hugo&#34;&gt;What is Hugo?&lt;/h2&gt;

&lt;p&gt;Hugo is a general-purpose website framework. Technically speaking, Hugo is
a static site generator. This means that, unlike systems like WordPress,
Ghost and Drupal, which run on your web server expensively building a page
every time a visitor requests one, Hugo does the building when you create
your content. Since websites are viewed far more often then they are
edited, Hugo is optimized for website viewing while providing a great
writing experience.&lt;/p&gt;

&lt;p&gt;Sites built with Hugo are extremely fast and very secure. Hugo sites can
be hosted anywhere, including Heroku, GoDaddy, GitHub Pages, Amazon S3
and CloudFront, and work well with CDNs. Hugo sites run without dependencies
on expensive runtimes like Ruby, Python or PHP and without dependencies
on any databases.&lt;/p&gt;

&lt;p&gt;We think of Hugo as the ideal website creation tool. With nearly instant
build times and the ability to rebuild whenever a change is made, Hugo
provides a very fast feedback loop. This is essential when you are
designing websites, but also very useful when creating content.&lt;/p&gt;

&lt;h2 id=&#34;what-does-hugo-do&#34;&gt;What does Hugo do?&lt;/h2&gt;

&lt;p&gt;In technical terms, Hugo takes a source directory of Markdown files and
templates and uses these as input to create a complete website.&lt;/p&gt;

&lt;p&gt;Hugo boasts the following features:&lt;/p&gt;

&lt;h3 id=&#34;general&#34;&gt;General&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Extremely fast build times (~1&amp;nbsp;ms per page)&lt;/li&gt;
&lt;li&gt;Completely cross platform: Runs on Mac OS&amp;nbsp;X, Linux and Windows&lt;/li&gt;
&lt;li&gt;Easy &lt;a href=&#34;http://fizarbd.github.io/web/overview/installing&#34;&gt;installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Render changes &lt;a href=&#34;http://fizarbd.github.io/web/overview/usage&#34;&gt;on the fly&lt;/a&gt; with &lt;a href=&#34;http://fizarbd.github.io/web/extras/livereload&#34;&gt;live reload&lt;/a&gt; as you develop&lt;/li&gt;
&lt;li&gt;Complete theme support&lt;/li&gt;
&lt;li&gt;Host your site anywhere&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;organization&#34;&gt;Organization&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Straightforward &lt;a href=&#34;http://fizarbd.github.io/web/content/organization&#34;&gt;organization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support for &lt;a href=&#34;http://fizarbd.github.io/web/content/sections&#34;&gt;website sections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Completely customizable &lt;a href=&#34;http://fizarbd.github.io/web/extras/urls&#34;&gt;URLs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support for configurable &lt;a href=&#34;http://fizarbd.github.io/web/indexes/overview&#34;&gt;taxonomies&lt;/a&gt; which includes categories and tags.  Create your own custom organization of content&lt;/li&gt;
&lt;li&gt;Ability to &lt;a href=&#34;http://fizarbd.github.io/web/content/ordering&#34;&gt;sort content&lt;/a&gt; as you desire&lt;/li&gt;
&lt;li&gt;Automatic &lt;a href=&#34;http://fizarbd.github.io/web/extras/toc&#34;&gt;table of contents&lt;/a&gt; generation&lt;/li&gt;
&lt;li&gt;Dynamic menu creation&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/extras/urls&#34;&gt;Pretty URLs&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/extras/permalinks&#34;&gt;Permalink&lt;/a&gt; pattern support&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/extras/aliases&#34;&gt;Aliases&lt;/a&gt; (redirects)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;content&#34;&gt;Content&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Content written in &lt;a href=&#34;http://fizarbd.github.io/web/content/example&#34;&gt;Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support for TOML, YAML and JSON metadata in &lt;a href=&#34;http://fizarbd.github.io/web/content/front-matter&#34;&gt;frontmatter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Completely &lt;a href=&#34;http://fizarbd.github.io/web/layout/homepage&#34;&gt;customizable homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support for multiple &lt;a href=&#34;http://fizarbd.github.io/web/content/types&#34;&gt;content types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Automatic and user defined &lt;a href=&#34;http://fizarbd.github.io/web/content/summaries&#34;&gt;summaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/extras/shortcodes&#34;&gt;Shortcodes&lt;/a&gt; to enable rich content inside of Markdown&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/layout/variables&#34;&gt;&amp;ldquo;Minutes to Read&amp;rdquo;&lt;/a&gt; functionality&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/layout/variables&#34;&gt;&amp;ldquo;Wordcount&amp;rdquo;&lt;/a&gt; functionality&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;additional-features&#34;&gt;Additional Features&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Integrated Disqus comment support&lt;/li&gt;
&lt;li&gt;Automatic &lt;a href=&#34;http://fizarbd.github.io/web/layout/rss&#34;&gt;RSS&lt;/a&gt; creation&lt;/li&gt;
&lt;li&gt;Support for Go and &lt;a href=&#34;https://github.com/eknkc/amber&#34;&gt;Amber&lt;/a&gt; templates&lt;/li&gt;
&lt;li&gt;Syntax &lt;a href=&#34;http://fizarbd.github.io/web/extras/highlighting&#34;&gt;highlighting&lt;/a&gt; powered by pygments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See what&amp;rsquo;s coming next in the &lt;a href=&#34;http://fizarbd.github.io/web/meta/roadmap&#34;&gt;roadmap&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;who-should-use-hugo&#34;&gt;Who should use Hugo?&lt;/h2&gt;

&lt;p&gt;Hugo is for people that prefer writing in a text editor over
a browser.&lt;/p&gt;

&lt;p&gt;Hugo is for people who want to hand code their own website without
worrying about setting up complicated runtimes, dependencies and
databases.&lt;/p&gt;

&lt;p&gt;Hugo is for people building a blog, company site, portfolio, tumblog,
documentation, single page site or a site with thousands of
pages.&lt;/p&gt;

&lt;h2 id=&#34;why-did-you-write-hugo&#34;&gt;Why did you write Hugo?&lt;/h2&gt;

&lt;p&gt;I wrote Hugo ultimately for a few reasons. First, I was disappointed with
WordPress, my then website solution. It rendered slowly. I couldn&amp;rsquo;t create
content as efficiently as I wanted to and needed to be online to write
posts. The constant security updates and the horror stories of people&amp;rsquo;s
hacked blogs. I hated how content was written in HTML instead of the much
simpler Markdown. Overall, I felt like it got in my way more than it helped
me from writing great content.&lt;/p&gt;

&lt;p&gt;I looked at existing static site generators like Jekyll, Middleman and nanoc.
All had complicated dependencies to install and took far longer to render
my blog with hundreds of posts than I felt was acceptable. I wanted
a framework to be able to get rapid feedback while making changes to the
templates, and the 5+-minute render times was just too slow. In general,
they were also very blog minded and didn&amp;rsquo;t have the ability to have
different content types and flexible URLs.&lt;/p&gt;

&lt;p&gt;I wanted to develop a fast and full-featured website framework without
dependencies. The Go language seemed to have all of the features I needed
in a language. I began developing Hugo in Go and fell in love with the
language. I hope you will enjoy using (and contributing to) Hugo as much
as I have writing it.&lt;/p&gt;

&lt;h2 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/overview/installing&#34;&gt;Install Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/overview/quickstart&#34;&gt;Quick start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/community/mailing-list&#34;&gt;Join the Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://github.com/spf13/hugo&#34;&gt;Star us on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://discuss.gohugo.io&#34;&gt;Discussion Forum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hugo Quickstart Guide</title>
      <link>http://fizarbd.github.io/web/overview/quickstart/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://fizarbd.github.io/web/overview/quickstart/</guid>
      <description>

&lt;p&gt;&lt;em&gt;This quickstart depends on features introduced in hugo v0.11. If you
have an earlier version of hugo you will need to &lt;a href=&#34;http://fizarbd.github.io/web/overview/installing/&#34;&gt;upgrade&lt;/a&gt; before
proceeding.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;Step 1. Install Hugo&lt;/h2&gt;

&lt;p&gt;Go to &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;Hugo Releases&lt;/a&gt; and download the
appropriate version for your os and architecture.&lt;/p&gt;

&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;

&lt;p&gt;More complete instructions are available at &lt;a href=&#34;http://fizarbd.github.io/web/overview/installing/&#34;&gt;Installing Hugo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;step-2-have-hugo-create-a-site-for-you&#34;&gt;Step 2. Have Hugo Create a site for you&lt;/h2&gt;

&lt;p&gt;Hugo has the ability to create a skeleton site.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new site /path/to/site
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For the rest of the operations we will be executing all commands from within the site directory&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /path/to/site
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The new site will have the following structure&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  ▸ archetypes/
  ▸ content/
  ▸ layouts/
  ▸ static/
    config.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Currently the site doesn’t have any content, nor is it configured.&lt;/p&gt;

&lt;h2 id=&#34;step-3-create-some-content&#34;&gt;Step 3. Create Some Content&lt;/h2&gt;

&lt;p&gt;Hugo also has the ability to create content for you.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new about.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A new file is now created in &lt;code&gt;content/&lt;/code&gt; with the following contents&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
draft = true
title = &amp;quot;about&amp;quot;
date = 2014-05-20T10:04:31Z
+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice the date is automatically set to the moment you created the content.&lt;/p&gt;

&lt;p&gt;Place some content in this file below the &lt;code&gt;+++&lt;/code&gt; in the Markdown format.&lt;/p&gt;

&lt;p&gt;For example you could put this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## A headline

Some Content
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For fun, let’s create another piece of content and place some Markdown in it as well.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new post/first.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The new file is located at &lt;code&gt;content/post/first.md&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We still lack any templates to tell us how to display the content.&lt;/p&gt;

&lt;h2 id=&#34;step-4-install-some-themes&#34;&gt;Step 4. Install some themes&lt;/h2&gt;

&lt;p&gt;Hugo has rich theme support and a growing set of themes to choose from:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/spf13/hugoThemes themes
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-5-run-hugo&#34;&gt;Step 5. Run Hugo&lt;/h2&gt;

&lt;p&gt;Hugo contains its own high performance web server. Simply run &lt;code&gt;hugo
server&lt;/code&gt; and Hugo will find an available port and run a server with
your content:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server --theme=hyde --buildDrafts
2 pages created
0 tags created
0 categories created
in 5 ms
Serving pages from exampleHugoSite/public
Web Server is available at http://localhost:1313
Press ctrl+c to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We specified two options here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--theme&lt;/code&gt; to pick which theme;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--buildDrafts&lt;/code&gt; because we want to display our content, both set to draft status.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To learn about what other options hugo has, run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To learn about the server options:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo help server
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-6-edit-content&#34;&gt;Step 6. Edit Content&lt;/h2&gt;

&lt;p&gt;Not only can Hugo run a server, but it can also watch your files for
changes and automatically rebuild your site. Hugo will then
communicate with your browser and automatically reload any open page.
This even works in mobile browsers.&lt;/p&gt;

&lt;p&gt;Stop the Hugo process by hitting ctrl+c. Then run the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server --theme=hyde --buildDrafts --watch
2 pages created
0 tags created
0 categories created
in 5 ms
Watching for changes in exampleHugoSite/content
Serving pages from exampleHugoSite/public
Web Server is available at http://localhost:1313
Press ctrl+c to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open your &lt;a href=&#34;http://vim.spf13.com&#34;&gt;favorite editor&lt;/a&gt;, edit and save your content and watch as Hugo rebuilds and reloads automatically.&lt;/p&gt;

&lt;p&gt;It’s especially productive to leave a browser open on a second monitor
and just glance at it whenever you save. You don’t even need to tab to
your browser. Hugo is so fast that the new site will be there before
you can look at the browser in most cases.&lt;/p&gt;

&lt;p&gt;Change and save this file. Notice what happened in your terminal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Change detected, rebuilding site

2 pages created
0 tags created
0 categories created
in 5 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-7-have-fun&#34;&gt;Step 7. Have fun&lt;/h2&gt;

&lt;p&gt;The best way to learn something is to play with it.&lt;/p&gt;

&lt;p&gt;Things to try:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add a &lt;a href=&#34;http://fizarbd.github.io/web/content/organization/&#34;&gt;new content file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a &lt;a href=&#34;http://fizarbd.github.io/web/content/sections/&#34;&gt;new section&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modify &lt;a href=&#34;http://fizarbd.github.io/web/layout/templates/&#34;&gt;a template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create content with &lt;a href=&#34;http://fizarbd.github.io/web/content/front-matter/&#34;&gt;TOML front matter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Define your own field in &lt;a href=&#34;http://fizarbd.github.io/web/content/front-matter/&#34;&gt;front matter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Display that &lt;a href=&#34;http://fizarbd.github.io/web/layout/variables/&#34;&gt;field in the template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a &lt;a href=&#34;http://fizarbd.github.io/web/content/types/&#34;&gt;new content type&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Installing Hugo</title>
      <link>http://fizarbd.github.io/web/overview/installing/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://fizarbd.github.io/web/overview/installing/</guid>
      <description>

&lt;p&gt;Hugo is written in Go with support for Windows, Linux, FreeBSD and OS&amp;nbsp;X.&lt;/p&gt;

&lt;p&gt;The latest release can be found at &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;Hugo Releases&lt;/a&gt;.
We currently build for Windows, Linux, FreeBSD and OS&amp;nbsp;X for x64
and i386 architectures.&lt;/p&gt;

&lt;h2 id=&#34;installing-hugo-binary&#34;&gt;Installing Hugo (binary)&lt;/h2&gt;

&lt;p&gt;Installation is very easy. Simply download the appropriate version for your
platform from &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;Hugo Releases&lt;/a&gt;.
Once downloaded it can be run from anywhere. You don&amp;rsquo;t need to install
it into a global location. This works well for shared hosts and other systems
where you don&amp;rsquo;t have a privileged account.&lt;/p&gt;

&lt;p&gt;Ideally you should install it somewhere in your path for easy use. &lt;code&gt;/usr/local/bin&lt;/code&gt;
is the most probable location.&lt;/p&gt;

&lt;p&gt;If you have &lt;a href=&#34;http://brew.sh&#34;&gt;Homebrew&lt;/a&gt;, installation is even easier.  Just run
&lt;code&gt;brew install hugo&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;installing-pygments-optional&#34;&gt;Installing Pygments (optional)&lt;/h3&gt;

&lt;p&gt;The Hugo executable has one &lt;em&gt;optional&lt;/em&gt; external dependency for source code highlighting (Pygments).&lt;/p&gt;

&lt;p&gt;If you want to have source code highlighting using the &lt;a href=&#34;http://fizarbd.github.io/web/extras/highlighting&#34;&gt;highlight shortcode&lt;/a&gt;,
you need to install the Python-based Pygments program. The procedure is outlined on the &lt;a href=&#34;http://pygments.org&#34;&gt;Pygments home page&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;upgrading-hugo&#34;&gt;Upgrading Hugo&lt;/h2&gt;

&lt;p&gt;Upgrading Hugo is as easy as downloading and replacing the executable you’ve
placed in your path.&lt;/p&gt;

&lt;h2 id=&#34;installing-from-source&#34;&gt;Installing from source&lt;/h2&gt;

&lt;h3 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;Go 1.1+&lt;/li&gt;
&lt;li&gt;Mercurial&lt;/li&gt;
&lt;li&gt;Bazaar&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;get-directly-from-github&#34;&gt;Get directly from GitHub:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;go get -v github.com/spf13/hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;building-hugo&#34;&gt;Building Hugo&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd /path/to/hugo
go build -o hugo main.go
mv hugo /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;contributing&#34;&gt;Contributing&lt;/h2&gt;

&lt;p&gt;Please see the &lt;a href=&#34;http://fizarbd.github.io/web/doc/contributing&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Hugo</title>
      <link>http://fizarbd.github.io/web/overview/usage/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://fizarbd.github.io/web/overview/usage/</guid>
      <description>

&lt;p&gt;Make sure either hugo is in your path or provide a path to it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo help
A Fast and Flexible Static Site Generator
built with love by spf13 and friends in Go.

Complete documentation is available at http://gohugo.io

Usage:
  hugo [flags]
  hugo [command]

Available Commands:
  server                    Hugo runs its own webserver to render the files
  version                   Print the version number of Hugo
  check                     Check content in the source directory
  benchmark                 Benchmark hugo by building a site a number of times
  new [path]                Create new content for your site
  help [command]            Help about any command

 Available Flags:
  -b, --baseUrl=&amp;quot;&amp;quot;: hostname (and path) to the root eg. http://spf13.com/
  -D, --buildDrafts=false: build content marked as draft
  -F, --buildFuture=false: build content with PublishDate in the future
      --config=&amp;quot;&amp;quot;: config file (default is path/config.yaml|json|toml)
  -d, --destination=&amp;quot;&amp;quot;: filesystem path to write files to
      --disableRSS=false: Do not build RSS files
      --disableSitemap=false: Do not build Sitemap file
      --log=false: Enable Logging
      --logFile=&amp;quot;&amp;quot;: Log File path (if set, logging enabled automatically)
  -s, --source=&amp;quot;&amp;quot;: filesystem path to read files relative from
      --stepAnalysis=false: display memory and timing of different steps of the program
  -t, --theme=&amp;quot;&amp;quot;: theme to use (located in /themes/THEMENAME/)
      --uglyUrls=false: if true, use /filename.html instead of /filename/
  -v, --verbose=false: verbose output
      --verboseLog=false: verbose logging
  -w, --watch=false: watch filesystem for changes and recreate as needed

Use &amp;quot;hugo help [command]&amp;quot; for more information about that command.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;common-usage-example&#34;&gt;Common Usage Example&lt;/h2&gt;

&lt;p&gt;The most common use is probably to run hugo with your current
directory being the input directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo
&amp;gt; X pages created
  in 8 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are working on things and want to see the changes
immediately, tell Hugo to watch for changes.&lt;/p&gt;

&lt;p&gt;Hugo will watch the filesystem for changes, rebuild your site as soon as a file
is saved.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo -s ~/mysite --watch
   28 pages created
   in 18 ms
   Watching for changes in /Users/spf13/Code/hugo/docs/content
   Press ctrl+c to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hugo can even run a server and create your site at the same time! Hugo
implements &lt;a href=&#34;http://fizarbd.github.io/web/extras/livereload&#34;&gt;live reload&lt;/a&gt; technology to automatically reload any open pages in
all browsers (including mobile).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server -ws ~/mysite
   Watching for changes in /Users/spf13/Code/hugo/docs/content
   Web Server is available at http://localhost:1313
   Press ctrl+c to stop
   28 pages created
   0 tags created
   in 18 ms
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Configuring Hugo</title>
      <link>http://fizarbd.github.io/web/overview/configuration/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://fizarbd.github.io/web/overview/configuration/</guid>
      <description>

&lt;p&gt;The directory structure and templates provide the majority of the
configuration for a site. In fact, a config file isn&amp;rsquo;t even needed for many
websites since the defaults follow commonly used patterns.&lt;/p&gt;

&lt;p&gt;Hugo expects to find the config file in the root of the source directory and
will look there first for a &lt;code&gt;config.toml&lt;/code&gt; file. If none is present, it will
then look for a &lt;code&gt;config.yaml&lt;/code&gt; file, followed by a &lt;code&gt;config.json&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;The config file is a site-wide config. The config file provides directions to
hugo on how to build the site as well as site-wide parameters and menus.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;p&gt;The following is an example of a typical yaml config file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
baseurl: &amp;quot;http://yoursite.example.com/&amp;quot;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The following is an example of a toml config file with some of the default values:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;contentdir = &amp;quot;content&amp;quot;
layoutdir = &amp;quot;layouts&amp;quot;
publishdir = &amp;quot;public&amp;quot;
builddrafts = false
baseurl = &amp;quot;http://yoursite.example.com/&amp;quot;
canonifyurls = true

[indexes]
   category = &amp;quot;categories&amp;quot;
   tag = &amp;quot;tags&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is a yaml configuration file which sets a few more options&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
baseurl: &amp;quot;http://yoursite.example.com/&amp;quot;
title: &amp;quot;Yoyodyne Widget Blogging&amp;quot;
footnotereturnlinkcontents: &amp;quot;↩&amp;quot;
permalinks:
  post: /:year/:month/:title/
params:
  Subtitle: &amp;quot;Spinning the cogs in the widgets&amp;quot;
  AuthorName: &amp;quot;John Doe&amp;quot;
  GitHubUser: &amp;quot;spf13&amp;quot;
  ListOfFoo:
    - &amp;quot;foo1&amp;quot;
    - &amp;quot;foo2&amp;quot;
  SidebarRecentLimit: 5
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;

&lt;p&gt;Config changes do not reflect with &lt;a href=&#34;http://fizarbd.github.io/web/extras/livereload&#34;&gt;Live Reload&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please restart &lt;code&gt;hugo server --watch&lt;/code&gt; whenever you make a config change.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Source Organization</title>
      <link>http://fizarbd.github.io/web/overview/source-directory/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://fizarbd.github.io/web/overview/source-directory/</guid>
      <description>

&lt;p&gt;Hugo takes a single directory and uses it as the input for creating a complete
website.&lt;/p&gt;

&lt;p&gt;The top level of a source directory will typically have the following elements:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;▸ archetypes/
▸ content/
▸ layouts/
▸ static/
▸ themes/
  config.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Learn more about the different directories and what their purpose is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/overview/configuration&#34;&gt;config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/content/archetypes&#34;&gt;archetypes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/content/organization&#34;&gt;content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/layout/overview&#34;&gt;layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/themes/creation#toc_4&#34;&gt;static&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fizarbd.github.io/web/themes/overview&#34;&gt;themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;p&gt;An example directory may look like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
├── config.toml
├── archetypes
|   └── default.md
├── content
|   ├── post
|   |   ├── firstpost.md
|   |   └── secondpost.md
|   └── quote
|   |   ├── first.md
|   |   └── second.md
├── layouts
|   ├── _default
|   |   ├── single.html
|   |   └── list.html
|   ├── partials
|   |   ├── header.html
|   |   └── footer.html
|   ├── taxonomies
|   |   ├── category.html
|   |   ├── post.html
|   |   ├── quote.html
|   |   └── tag.html
|   ├── post
|   |   ├── li.html
|   |   ├── single.html
|   |   └── summary.html
|   ├── quote
|   |   ├── li.html
|   |   ├── single.html
|   |   └── summary.html
|   ├── shortcodes
|   |   ├── img.html
|   |   ├── vimeo.html
|   |   └── youtube.html
|   ├── index.html
|   └── sitemap.xml
├── themes
|   ├── hyde
|   └── doc
└── static
    ├── css
    └── js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This directory structure tells us a lot about this site:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The website intends to have two different types of content: posts and quotes.&lt;/li&gt;
&lt;li&gt;It will also apply two different indexes to that content: categories and tags.&lt;/li&gt;
&lt;li&gt;It will be displaying content in 3 different views: a list, a summary and a full page view.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>